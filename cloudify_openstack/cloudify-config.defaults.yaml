keystone:
    username: Enter-Openstack-Username-Here
    password: Enter-Openstack-Password-Here
    tenant_name: Enter-Openstack-Tenant-Name-Here
    auth_url: Enter-Openstack-Auth-Url-Here

networking:
    neutron_supported_region: true
    int_network:
        create_if_missing: true
        name: cloudify-admin-network
    subnet:
        create_if_missing: true
        name: cloudify-admin-network-subnet
        ip_version: 4
        cidr: 10.67.79.0/24
        dns_nameservers: []
    ext_network:
        create_if_missing: false # For now, this must be 'create_if_missing': false
        name: Ext-Net
    router:
        create_if_missing: true
        name: cloudify-router
    agents_security_group:
        create_if_missing: true
        name: cloudify-sg-agents
    management_security_group:
        create_if_missing: true
        name: cloudify-sg-management
        cidr: 0.0.0.0/0

compute:
    region: RegionOne
    management_server:
        #floating_ip: [FLOATING_IP] #uncomment and provide preallocated ip to disable auto-allocation of new IP on each run
        user_on_management: ubuntu
        userhome_on_management: /home/ubuntu
        creation_timeout: 300
        instance:
            create_if_missing: true
            name: cloudify-management-server
            image: [Image-ID]
            flavor: 102
        management_keypair:
            create_if_missing: true
            name: cloudify-management-kp
            private_key_path: ~/.ssh/cloudify-management-kp.pem
    agent_servers:
        agents_keypair:
            create_if_missing: true
            name: cloudify-agents-kp
            private_key_path: ~/.ssh/cloudify-agents-kp.pem

cloudify:
    server:
        packages:
            components_package_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.1.0/rc2-RELEASE/cloudify-components_3.1.0-rc2-b84_amd64.deb
            core_package_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.1.0/rc2-RELEASE/cloudify-core_3.1.0-rc2-b84_amd64.deb
            ui_package_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.1.0/rc2-RELEASE/cloudify-ui_3.1.0-rc2-b84_amd64.deb
    agents:
        packages:
            ubuntu_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.1.0/rc2-RELEASE/cloudify-ubuntu-precise-agent_3.1.0-rc2-b84_amd64.deb
            centos_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.1.0/rc2-RELEASE/cloudify-centos-final-agent_3.1.0-rc2-b84_amd64.deb
            windows_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.1.0/rc2-RELEASE/cloudify-windows-agent_3.1.0-rc2-b84_amd64.deb
        config:
            min_workers: 2
            max_workers: 5
            remote_execution_port: 22
            #user: (no default - optional parameter)
    workflows:
        task_retries: -1  # -1 means we retry forever
        retry_interval: 30
    policy_engine:
        start_timeout: 30
    bootstrap:
        ssh:
            initial_connectivity_retries: 20
            initial_connectivity_retries_interval: 15
            command_retries: 3
            retries_interval: 3
            connection_attempts: 1
            socket_timeout: 10

#this section only applies to bootstrapping in --dev-mode
dev:
    #each section here is identified with one virtual environment
    celery:
        #which virtualenv dir does this apply to?
        virtualenv: /opt/celery/cloudify.management__worker/env/
        #which shell commands are run before the branches are deployed?
        preruns:
            - echo "Hi!"
        downloads:
            - https://github.com/cloudify-cosmo/cloudify-manager/archive/develop.tar.gz
        #which branches will be applied to this virtualenv?
        installs:
            - /cloudify-manager-develop/plugins/agent-installer/
            - /cloudify-manager-develop/plugins/plugin-installer/
            - https://github.com/cloudify-cosmo/cloudify-plugins-common/archive/develop.tar.gz
        #which shell commands are run after the branches are deployed?
        runs:
            - sudo /etc/init.d/celeryd-cloudify.management restart
    manager:
        virtualenv: /opt/manager
        downloads:
            - https://github.com/cloudify-cosmo/cloudify-manager/archive/develop.tar.gz
        installs:
            - /cloudify-manager-develop/rest-service/
            - /cloudify-manager-develop/plugins/agent-installer/
            - /cloudify-manager-develop/plugins/plugin-installer/
        runs:
            - sudo cp -R /tmp/opt/manager/cloudify-manager-develop/resources/rest-service/cloudify /opt/manager/resources  # for resources and workflow service
            - sudo cp -R /tmp/opt/manager/cloudify-manager-develop/* /opt/manager/cloudify-manager-develop/  # for resources and workflow service
            - sudo rm -rf /tmp/opt/manager/lib/python2.7/site-packages/rest-service
            - sudo restart workflow
            - sudo status workflow
            - sudo restart manager
            - sudo status manager
